@model SampleBank.Models.Transaction

@{
		ViewData["Title"] = "Create";
}

@{
	switch (ViewBag.transactionType){
		case "deposit":
			Html.RenderPartial("_DepositForm", Model);
			break;
		case "withdraw":
			Html.RenderPartial("_WithdrawForm", Model);
			break;
		case "innerTransaction":
			Html.RenderPartial("_InnerTransactionForm", Model);
			break;
		case "outerTransaction":
			Html.RenderPartial("_OuterTransactionForm", Model);
			break;
	}
}


@section Scripts {
		<script>
			var oldBlanace = "@ViewBag.accountBalance";
			var depositInput = document.getElementById("depositAmount");
			var resultingBalanceInput = document.getElementById("resultingBalance");
			$(document).on('input', '#depositAmount', function () {
				if (depositInput.value)
					resultingBalanceInput.placeholder = parseFloat(depositInput.value) + parseFloat(oldBlanace);
				else
					resultingBalanceInput.placeholder = "";
			});
		</script>
		@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
